/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Image;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.LinkedList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import model.*;
import reproductor.Reproductor;

/**
 *
 * @author jeann
 */
public class Buscar extends javax.swing.JFrame {

    DefaultListModel defaultModelPlaylist = new DefaultListModel();
    DefaultListModel defaultModelSong = new DefaultListModel();
    String usuario;
    File portada;
    LinkedList<Playlist> playlistBusqueda = new LinkedList<>();
    LinkedList<Song> cancionesBusqueda = new LinkedList<>();
    boolean seleccionadoPlaylist = false, seleccionadoSong = false;

    /**
     * Creates new form UserInterface
     */
    public Buscar() {
        //start variables
        initComponents();
        this.setLocationRelativeTo(null);
        usuario = Reproductor.lista.get(Reproductor.posicionUsuario).nombre;
        for (int i = 0; i < Reproductor.songList.size(); i++) {
            defaultModelSong.addElement(Reproductor.songList.get(i).getTitle());
            cancionesBusqueda.add(Reproductor.songList.get(i));
        }
        cancionesExistentes.setModel(defaultModelSong);

        //PLAYLIST--------------------------------------------------------------
        for (int i = 0; i < Reproductor.playlists.size(); i++) {
            defaultModelPlaylist.addElement(Reproductor.playlists.get(i).getNombre());
            playlistBusqueda.add(Reproductor.playlists.get(i));
        }
        playlistsExistentes.setModel(defaultModelPlaylist);
        File f = new File(".");
        portada = new File(f.getAbsolutePath() + "\\cerrar.png");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        jPanel1 = new javax.swing.JPanel();
        btnClose = new javax.swing.JButton();
        btnMinimize = new javax.swing.JButton();
        btnCerrarSesion = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        cancionesExistentes = new javax.swing.JList();
        txtArtistaSong = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTituloSong = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtAlbumSong = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtAnioSong = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtGeneroSong = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtPaisSong = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        lblPortadaSong = new javax.swing.JLabel();
        btnGuardarSong = new javax.swing.JButton();
        btnReproducirSong = new javax.swing.JButton();
        btnAgregarSong = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txtBusquedaSong = new javax.swing.JTextField();
        comboBusquedaSong = new javax.swing.JComboBox();
        btnBuscarSong = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        playlistsExistentes = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        lblPortadaPlay = new javax.swing.JLabel();
        txtNombrePlay = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtGeneroPlay = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescripcionPlay = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Play = new javax.swing.JTextField();
        btnGuardarPlaylist = new javax.swing.JButton();
        btnReproducirPlaylist = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        kGradientPanel1.setkEndColor(new java.awt.Color(42, 41, 76));
        kGradientPanel1.setkGradientFocus(0);
        kGradientPanel1.setkStartColor(new java.awt.Color(189, 110, 111));

        jPanel1.setOpaque(false);

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/close.png"))); // NOI18N
        btnClose.setBorderPainted(false);
        btnClose.setContentAreaFilled(false);
        btnClose.setFocusPainted(false);
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeClick(evt);
            }
        });

        btnMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/minimize.png"))); // NOI18N
        btnMinimize.setBorderPainted(false);
        btnMinimize.setContentAreaFilled(false);
        btnMinimize.setFocusPainted(false);
        btnMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeClick(evt);
            }
        });

        btnCerrarSesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/en-espera.png"))); // NOI18N
        btnCerrarSesion.setContentAreaFilled(false);
        btnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesionActionPerformed(evt);
            }
        });

        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/hacia-atras.png"))); // NOI18N
        btnRegresar.setContentAreaFilled(false);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCerrarSesion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegresar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnMinimize, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegresar)
                    .addComponent(btnCerrarSesion)
                    .addComponent(btnMinimize, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Segoe Print", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Seleccione la opci√≥n que desea visualizar");

        jTabbedPane1.setAutoscrolls(true);
        jTabbedPane1.setFocusable(false);

        jPanel3.setFocusable(false);

        cancionesExistentes.setBorder(javax.swing.BorderFactory.createTitledBorder("Canciones"));
        cancionesExistentes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        cancionesExistentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancionesExistentesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(cancionesExistentes);

        txtArtistaSong.setEditable(false);

        jLabel8.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        jLabel8.setText("Artista");

        txtTituloSong.setEditable(false);

        jLabel9.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        jLabel9.setText("Titulo");

        txtAlbumSong.setEditable(false);

        jLabel10.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        jLabel10.setText("Album");

        txtAnioSong.setEditable(false);

        jLabel11.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        jLabel11.setText("A√±o");

        txtGeneroSong.setEditable(false);

        jLabel12.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        jLabel12.setText("Genero");

        txtPaisSong.setEditable(false);

        jLabel13.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        jLabel13.setText("Pais");

        lblPortadaSong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/cerrar.png"))); // NOI18N
        lblPortadaSong.setToolTipText("");

        btnGuardarSong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/salvar.png"))); // NOI18N
        btnGuardarSong.setContentAreaFilled(false);
        btnGuardarSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarSongActionPerformed(evt);
            }
        });

        btnReproducirSong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/jugar.png"))); // NOI18N
        btnReproducirSong.setToolTipText("");
        btnReproducirSong.setContentAreaFilled(false);
        btnReproducirSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReproducirSongActionPerformed(evt);
            }
        });

        btnAgregarSong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/mas.png"))); // NOI18N
        btnAgregarSong.setContentAreaFilled(false);
        btnAgregarSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarSongActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        jLabel14.setText("Seleccione los par√°metros de b√∫squeda:");

        comboBusquedaSong.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nombre", "Genero", "Artista", "Pais" }));

        btnBuscarSong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/busquedaMini.png"))); // NOI18N
        btnBuscarSong.setContentAreaFilled(false);
        btnBuscarSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarSongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(comboBusquedaSong, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtBusquedaSong, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnGuardarSong)
                                .addGap(123, 123, 123)
                                .addComponent(btnAgregarSong)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnReproducirSong))
                            .addComponent(txtPaisSong)
                            .addComponent(txtGeneroSong)
                            .addComponent(txtAnioSong)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscarSong, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAlbumSong)
                                    .addComponent(txtTituloSong)
                                    .addComponent(txtArtistaSong)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(169, 169, 169)
                                .addComponent(lblPortadaSong)
                                .addGap(242, 242, 242)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblPortadaSong, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtBusquedaSong, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboBusquedaSong))
                            .addComponent(btnBuscarSong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtArtistaSong, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtTituloSong, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtAlbumSong, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtAnioSong, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtGeneroSong, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtPaisSong, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGuardarSong)
                            .addComponent(btnReproducirSong)
                            .addComponent(btnAgregarSong))
                        .addGap(28, 28, 28))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())))
        );

        jTabbedPane1.addTab("Canciones", jPanel3);

        playlistsExistentes.setBorder(javax.swing.BorderFactory.createTitledBorder("Playlists"));
        playlistsExistentes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        playlistsExistentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playlistsExistentesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(playlistsExistentes);

        jLabel3.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        jLabel3.setText("Portada");

        lblPortadaPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/cerrar.png"))); // NOI18N
        lblPortadaPlay.setToolTipText("");

        txtNombrePlay.setEditable(false);

        jLabel5.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        jLabel5.setText("Nombre");

        jLabel4.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        jLabel4.setText("Genero");

        txtGeneroPlay.setEditable(false);

        txtDescripcionPlay.setEditable(false);
        txtDescripcionPlay.setColumns(20);
        txtDescripcionPlay.setRows(5);
        jScrollPane2.setViewportView(txtDescripcionPlay);

        jLabel6.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        jLabel6.setText("Descripci√≥n");

        jLabel7.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        jLabel7.setText("Autor");

        Play.setEditable(false);

        btnGuardarPlaylist.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/salvar.png"))); // NOI18N
        btnGuardarPlaylist.setContentAreaFilled(false);
        btnGuardarPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarPlaylistActionPerformed(evt);
            }
        });

        btnReproducirPlaylist.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/jugar.png"))); // NOI18N
        btnReproducirPlaylist.setToolTipText("");
        btnReproducirPlaylist.setContentAreaFilled(false);
        btnReproducirPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReproducirPlaylistActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6))
                                .addGap(37, 37, 37)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                                    .addComponent(txtNombrePlay)
                                    .addComponent(txtGeneroPlay)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(219, 219, 219)
                                .addComponent(lblPortadaPlay)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(87, 87, 87)
                                .addComponent(Play)))
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addComponent(btnGuardarPlaylist)
                        .addGap(116, 116, 116)
                        .addComponent(btnReproducirPlaylist)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel3)
                        .addGap(78, 78, 78))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblPortadaPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNombrePlay, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtGeneroPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel7))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(Play, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGuardarPlaylist)
                    .addComponent(btnReproducirPlaylist))
                .addGap(46, 46, 46))
        );

        jTabbedPane1.addTab("Playlists", jPanel4);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(253, 253, 253))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void minimizeClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeClick
        setExtendedState(JFrame.CROSSHAIR_CURSOR);
    }//GEN-LAST:event_minimizeClick

    private void closeClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeClick
        System.exit(0);
    }//GEN-LAST:event_closeClick

    private void btnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesionActionPerformed
        Principal p = new Principal();
        p.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnCerrarSesionActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        Menu m = new Menu();
        m.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void playlistsExistentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playlistsExistentesMouseClicked
        int indice = playlistsExistentes.getSelectedIndex();
        portada = playlistBusqueda.get(indice).getPortada();
        String nombre = playlistBusqueda.get(indice).getNombre();
        String genero = playlistBusqueda.get(indice).getGenero();
        String descripcion = playlistBusqueda.get(indice).getDescripcion();
        String autor = playlistBusqueda.get(indice).getAutor();

        txtNombrePlay.setText(nombre);
        txtGeneroPlay.setText(genero);
        txtDescripcionPlay.setText(descripcion);
        Play.setText(autor);
        Image img = new ImageIcon(portada.getAbsolutePath().replace('\'', '/')).getImage();
        ImageIcon img2 = new ImageIcon(img.getScaledInstance(128, 128, Image.SCALE_SMOOTH));
        lblPortadaPlay.setIcon(img2);
        seleccionadoPlaylist = true;
    }//GEN-LAST:event_playlistsExistentesMouseClicked

    private void btnReproducirPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReproducirPlaylistActionPerformed
        int indice = playlistsExistentes.getSelectedIndex();
        if (seleccionadoPlaylist) {
            UserInterface u = new UserInterface(playlistBusqueda.get(indice).getCanciones());
            u.setVisible(true);
            this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna playlist");
        }
    }//GEN-LAST:event_btnReproducirPlaylistActionPerformed

    private void btnGuardarPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarPlaylistActionPerformed
        int indice = playlistsExistentes.getSelectedIndex();
        if (seleccionadoPlaylist) {
            if (playlistBusqueda.get(indice).getAutor().equals(usuario)) {
                JOptionPane.showMessageDialog(null, "No puede guardar una playlist que es de su autoria");
            } else {
                Reproductor.contadorPlaylists++;
                Playlist p = new Playlist(Reproductor.contadorPlaylists, playlistBusqueda.get(indice).getPortada(), playlistBusqueda.get(indice).getNombre(),
                        playlistBusqueda.get(indice).getGenero(), playlistBusqueda.get(indice).getDescripcion(), usuario);
                p.setCanciones(playlistBusqueda.get(indice).getCanciones());
                Reproductor.playlists.add(p);
                playlistBusqueda.add(p);
                defaultModelPlaylist.addElement(playlistBusqueda.get(indice).getNombre());
                File f = new File(".");
                portada = new File(f.getAbsolutePath() + "\\cerrar.png");
                txtNombrePlay.setText("");
                txtGeneroPlay.setText("");
                txtDescripcionPlay.setText("");
                Play.setText("");
                Image img = new ImageIcon(portada.getAbsolutePath().replace('\'', '/')).getImage();
                ImageIcon img2 = new ImageIcon(img.getScaledInstance(128, 128, Image.SCALE_SMOOTH));
                lblPortadaPlay.setIcon(img2);
                seleccionadoPlaylist = false;
                JOptionPane.showMessageDialog(null, "La playlist se ha guardado exitosamente");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna playlist");
        }
    }//GEN-LAST:event_btnGuardarPlaylistActionPerformed

    private void cancionesExistentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancionesExistentesMouseClicked
        int indice = cancionesExistentes.getSelectedIndex();
        String artist = cancionesBusqueda.get(indice).getAtist();
        String title = cancionesBusqueda.get(indice).getTitle();
        String album = cancionesBusqueda.get(indice).getAlbum();
        String year = cancionesBusqueda.get(indice).getYear();
        String genre = cancionesBusqueda.get(indice).getGenre();
        String country = cancionesBusqueda.get(indice).getCountry();

        txtArtistaSong.setText(artist);
        txtTituloSong.setText(title);
        txtAlbumSong.setText(album);
        txtAnioSong.setText(year);
        txtGeneroSong.setText(genre);
        txtPaisSong.setText(country);

        if (cancionesBusqueda.get(indice).getImageData() != null) {
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(cancionesBusqueda.get(indice).getImageData()).getImage().getScaledInstance(128, 128, java.awt.Image.SCALE_DEFAULT));
            lblPortadaSong.setIcon(imageIcon);
        } else {
            File f = new File(".");
            portada = new File(f.getAbsolutePath() + "\\cerrar.png");
            Image img = new ImageIcon(portada.getAbsolutePath().replace('\'', '/')).getImage();
            ImageIcon img2 = new ImageIcon(img.getScaledInstance(128, 128, Image.SCALE_SMOOTH));
            lblPortadaSong.setIcon(img2);
        }

        seleccionadoSong = true;
    }//GEN-LAST:event_cancionesExistentesMouseClicked

    private void btnGuardarSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarSongActionPerformed
        int indice = cancionesExistentes.getSelectedIndex();

        if (seleccionadoSong) {
            String rutaCancion = cancionesBusqueda.get(indice).getPath();
            File archivo = new File(rutaCancion);

            try {
                JFileChooser file = new JFileChooser();
                file.showSaveDialog(this);
                File guarda = file.getSelectedFile();

                if (guarda != null) {
                    FileWriter save = new FileWriter(archivo.getName() + ".mp3");
                    save.close();
                    JOptionPane.showMessageDialog(null,
                            "El archivo se ha guardado exitosamente",
                            "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null,
                        "Su archivo no se ha guardado",
                        "Advertencia", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una cancion");
        }
    }//GEN-LAST:event_btnGuardarSongActionPerformed

    private void btnReproducirSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReproducirSongActionPerformed
        int indice = cancionesExistentes.getSelectedIndex();

        if (seleccionadoSong) {
            LinkedList<Song> temporal = new LinkedList<>();
            temporal.add(cancionesBusqueda.get(indice));
            UserInterface u = new UserInterface(temporal);
            u.setVisible(true);
            this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una cancion");
        }

    }//GEN-LAST:event_btnReproducirSongActionPerformed

    private void btnAgregarSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarSongActionPerformed
        int indice = cancionesExistentes.getSelectedIndex();
        boolean agregado = false, error = false;
        String playlist = JOptionPane.showInputDialog("Ingrese el nombre de la playlist a la que desea agregarlo");
        if (playlist.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar una playlist para guardar la cancion");
        } else {
            if (seleccionadoSong) {
                for (int i = 0; i < Reproductor.playlists.size(); i++) {
                    if (Reproductor.playlists.get(i).getNombre().equals(playlist)) {
                        if (Reproductor.playlists.get(i).getAutor().equals(usuario)) {
                            LinkedList<Song> cancionesMiPlaylist = Reproductor.playlists.get(i).getCanciones();
                            cancionesMiPlaylist.add(cancionesBusqueda.get(indice));
                            agregado = true;
                            JOptionPane.showMessageDialog(null, "Se agrego la cancion correctamente");
                        } else {
                            error = true;
                            JOptionPane.showMessageDialog(null, "No puede agregar canciones a una playlist que no es suya");
                        }
                    }
                }
                if ((!agregado && !error)) {
                    JOptionPane.showMessageDialog(null, "Existio un error al agregar la cancion");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe seleccionar una cancion");
            }
        }
    }//GEN-LAST:event_btnAgregarSongActionPerformed

    private void btnBuscarSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarSongActionPerformed
        String valor = txtBusquedaSong.getText();
        String filtro = comboBusquedaSong.getSelectedItem().toString();
        LinkedList<Song> temporal = new LinkedList<>();
        defaultModelSong = new DefaultListModel();

        switch (filtro.toLowerCase()) {
            case "nombre":
                for (int i = 0; i < cancionesBusqueda.size(); i++) {
                    if (cancionesBusqueda.get(i).getTitle() != null) {
                        if (cancionesBusqueda.get(i).getTitle().equalsIgnoreCase(valor)) {
                            temporal.add(cancionesBusqueda.get(i));
                            defaultModelSong.addElement(cancionesBusqueda.get(i).getTitle());
                        }
                    }
                }
                break;
            case "genero":
                for (int i = 0; i < cancionesBusqueda.size(); i++) {
                    if (cancionesBusqueda.get(i).getGenre() != null) {
                        if (cancionesBusqueda.get(i).getGenre().equalsIgnoreCase(valor)) {
                            temporal.add(cancionesBusqueda.get(i));
                            defaultModelSong.addElement(cancionesBusqueda.get(i).getTitle());
                        }
                    }
                }
                break;
            case "artista":
                for (int i = 0; i < cancionesBusqueda.size(); i++) {
                    if (cancionesBusqueda.get(i).getAtist() != null) {
                        if (cancionesBusqueda.get(i).getAtist().equalsIgnoreCase(valor)) {
                            temporal.add(cancionesBusqueda.get(i));
                            defaultModelSong.addElement(cancionesBusqueda.get(i).getTitle());
                        }
                    }
                }
                break;
            case "pais":
                for (int i = 0; i < cancionesBusqueda.size(); i++) {
                    if (cancionesBusqueda.get(i).getCountry() != null) {
                        if (cancionesBusqueda.get(i).getCountry().equalsIgnoreCase(valor)) {
                            temporal.add(cancionesBusqueda.get(i));
                            defaultModelSong.addElement(cancionesBusqueda.get(i).getTitle());
                        }
                    }
                }
                break;
        }

        cancionesBusqueda = temporal;
        cancionesExistentes.setModel(defaultModelSong);
    }//GEN-LAST:event_btnBuscarSongActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Play;
    private javax.swing.JButton btnAgregarSong;
    private javax.swing.JButton btnBuscarSong;
    private javax.swing.JButton btnCerrarSesion;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnGuardarPlaylist;
    private javax.swing.JButton btnGuardarSong;
    private javax.swing.JButton btnMinimize;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnReproducirPlaylist;
    private javax.swing.JButton btnReproducirSong;
    private javax.swing.JList cancionesExistentes;
    private javax.swing.JComboBox comboBusquedaSong;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JLabel lblPortadaPlay;
    private javax.swing.JLabel lblPortadaSong;
    private javax.swing.JList playlistsExistentes;
    private javax.swing.JTextField txtAlbumSong;
    private javax.swing.JTextField txtAnioSong;
    private javax.swing.JTextField txtArtistaSong;
    private javax.swing.JTextField txtBusquedaSong;
    private javax.swing.JTextArea txtDescripcionPlay;
    private javax.swing.JTextField txtGeneroPlay;
    private javax.swing.JTextField txtGeneroSong;
    private javax.swing.JTextField txtNombrePlay;
    private javax.swing.JTextField txtPaisSong;
    private javax.swing.JTextField txtTituloSong;
    // End of variables declaration//GEN-END:variables

}
